{"ast":null,"code":"var _jsxFileName = \"/home/muhammad_siddik_akbar/REACT.JS Anmol/signup-with-formik/src/components/Signup.js\";\nimport React from 'react';\nimport { Formik, Form } from 'formik';\nimport { TextField } from './TextField';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Signup = () => {\n  const validate = Yup.object({\n    firstName: Yup.string().max(20, \"Must be 20 characters or less\").required('Required'),\n    lastName: Yup.string().max(20, \"Must be 20 characters or less\").required('Required'),\n    email: Yup.string().email('Email is invalid').required('Required'),\n    password: Yup.string().min(8, \"Password must be atleast 8 characters\").required('Required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], \"Password must match\").required('Confirm your password first')\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: '',\n      password: '',\n      confirmPassword: ''\n    },\n    validationSchema: validate,\n    onSubmit: values => {\n      console.log(values);\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-4 font-weight-bold-display-4\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(TestField, {\n          label: \"First Name\",\n          name: \"firstName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(TestField, {\n          label: \"Last Name\",\n          name: \"lastName\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(TestField, {\n          label: \"Email\",\n          name: \"email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(TestField, {\n          label: \"Password\",\n          name: \"password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(TestField, {\n          label: \"Confirm Password\",\n          name: \"confirmPassword\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-dark mt-3\",\n          type: \"submit\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-danger mt-3 ml-3\",\n          type: \"reset\",\n          children: \"Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_c = Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/home/muhammad_siddik_akbar/REACT.JS Anmol/signup-with-formik/src/components/Signup.js"],"names":["React","Formik","Form","TextField","Yup","Signup","validate","object","firstName","string","max","required","lastName","email","password","min","confirmPassword","oneOf","ref","values","console","log","formik"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form } from 'formik';\nimport { TextField } from './TextField';\nimport * as Yup from 'yup';\nexport const Signup = () => {\n    const validate = Yup.object({\n        firstName: Yup.string()\n            .max(20, \"Must be 20 characters or less\")\n            .required('Required'),\n        lastName: Yup.string()\n            .max(20, \"Must be 20 characters or less\")\n            .required('Required'),\n        email: Yup.string()\n            .email('Email is invalid')\n            .required('Required'),\n        password: Yup.string()\n            .min(8, \"Password must be atleast 8 characters\")\n            .required('Required'),\n        confirmPassword: Yup.string()\n            .oneOf([Yup.ref('password'), null], \"Password must match\")\n            .required('Confirm your password first'),\n    })\n    return (\n        <Formik\n            initialValues={{\n                firstName: '',\n                lastName : '',\n                email: '',\n                password: '',\n                confirmPassword: ''\n            }}\n            validationSchema={validate}\n            onSubmit={values => {\n                console.log(values)\n            }}\n        >\n            {formik => (\n                <div>\n                    <h1 className=\"my-4 font-weight-bold-display-4\">Sign Up</h1> \n                    <form>\n                         <TestField label=\"First Name\" name=\"firstName\" type=\"text\" ></TestField>\n                         <TestField label=\"Last Name\" name=\"lastName\" type=\"text\" ></TestField>\n                         <TestField label=\"Email\" name=\"email\" type=\"email\" ></TestField>\n                         <TestField label=\"Password\" name=\"password\" type=\"password\" ></TestField>\n                         <TestField label=\"Confirm Password\" name=\"confirmPassword\" type=\"password\" ></TestField>\n                         <button className=\"btn btn-dark mt-3\" type=\"submit\">Register</button>\n                         <button className=\"btn btn-danger mt-3 ml-3\" type=\"reset\" >Reset</button>\n                    </form>\n                </div>\n            )}\n        </Formik>\n    )\n}\n\n"]},"metadata":{},"sourceType":"module"}